<?php


namespace api\models;


use common\models\AuthAssignment;
use common\helper\HelperFunction;
use yii\data\ActiveDataProvider;
use yii\web\BadRequestHttpException;

class UserPage extends User
{
    public $role_name;

    public function rules()
    {
        return [
            [['email', 'password', 'full_name', 'role_name'], 'required'],
            [['email'], 'email'],
            [['email'], 'unique'],
            [['email', 'full_name', 'password', 'phone', 'note', 'role_name'], 'string'],
            [['email', 'full_name', 'password', 'phone', 'note', 'role_name'], 'safe'],
            [['role_name'], 'in', 'range' => [AuthAssignment::ROLE_SALE, AuthAssignment::ROLE_ADMIN]],
        ];
    }

    public function search($queryParams)
    {
        $query = User::find();
        $provider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'pageSize' => 20,
            ],
            'sort' => [
                'defaultOrder' => [
                    'id' => SORT_DESC,
                ]
            ],
        ]);
        if (!$this->load($queryParams, '')) {
            return $provider;
        }

        return $provider;
    }

    public function afterFind()
    {
        parent::afterFind();
    }

    public function afterSave($insert, $changedAttributes)
    {
        $authAssignment = AuthAssignment::findOne(['user_id' => $this->id]);
        if (!$authAssignment) {
            $authAssignment = new AuthAssignment();
            $authAssignment->created_at = time();
            $authAssignment->user_id = $this->id;
        }
        $authAssignment->item_name = $this->role_name;
        if (!$authAssignment->save()) {
            throw new BadRequestHttpException(HelperFunction::getFirstErrorModel($authAssignment));
        }
        parent::afterSave($insert, $changedAttributes);
    }

    public function afterDelete()
    {
        parent::afterDelete(); // TODO: Change the autogenerated stub
        AuthAssignment::deleteAll(['user_id' => $this->id]);
    }
}
